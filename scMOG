scMOG: https://github.com/GaoLabXDU/scMOG
BABEL: https://github.com/wukevin/babel

## install miniconda
wget -c https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
chmod +x Miniconda3-latest-Linux-x86_64.sh
./Miniconda3-latest-Linux-x86_64.sh
## enter...   yes...

conda create -n scMOG python=3.7.10
conda activate scMOG

git clone https://github.com/GaoLabXDU/scMOG.git
conda install pytorch
pip install scanpy 
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple intervaltree cached_property mpl_scatter_density adjustText astropy igraph louvain leidenalg tensorboard skorch

#datasets (from BABEL)
#https://office365stanford-my.sharepoint.com/personal/wukevin_stanford_edu/_layouts/15/
#download.aspx?SourceduUrl=%2Fpersonal%2Fwukevin%5Fstanford%5Fedu%2FDocuments%2Fmanuscripts%2Fsingle%5Fcell%5Fatac%5Frna%2Fpublic%5Fdata%2Fdata%2Etar%2Egz

python ../scMOG_code/bin/Preprocessing.py --data DM_rep4.h5  --outdir test_out

## WGAN: https://zhuanlan.zhihu.com/p/25071913



#wget -c https://ftp.ncbi.nlm.nih.gov/geo/series/GSE200nnn/GSE200046/suppl/GSE200046_bm_multiome_rna.h5ad.gz
#wget -c https://ftp.ncbi.nlm.nih.gov/geo/series/GSE200nnn/GSE200046/suppl/GSE200046_bm_multiome_atac.h5ad.gz

##################### h5ad to h5 (for both scRNA-seq and scATAC-seq)#############################
## h5ad_to_h5.py
import h5py
import numpy as np
from scipy.sparse import csr_matrix, hstack

#ref = h5py.File('DM_rep4.h5', 'r')
rna  = h5py.File('GSE200046_bm_multiome_rna.h5ad', 'r')
atac = h5py.File('GSE200046_bm_multiome_atac.h5ad', 'r')
out  = h5py.File('GSE200046_bm_rna_atac.h5', 'w')

g = out.create_group('matrix')
g.create_dataset('barcodes', data=rna['obs']['index'][:])
g.create_dataset('data', data=np.append(rna['X']['data'][:], atac['X']['data'][:]))

g_2 = g.create_group('features')
g_2.create_dataset('_all_tag_keys', data=np.array([b'genome', b'interval']))
g_2.create_dataset('feature_type', data=np.append([b'Gene Expression']*rna['var']['_index'].shape[0], [b'Peaks']*atac['var']['idx'].shape[0]))
g_2.create_dataset('genome', data=np.array([b'GRCh38'] * (rna['var']['_index'].shape[0]+atac['var']['idx'].shape[0])))
g_2.create_dataset('id', data=np.append(rna['var']['_index'][:], atac['var']['_index'][:]))        # gene names for ENSMBLE ID????
g_2.create_dataset('interval', data=np.append(rna['var']['_index'][:], atac['var']['_index'][:]))  # genes for scRNA-seq????
g_2.create_dataset('name', data=np.append(rna['var']['_index'][:], atac['var']['_index'][:]))      

## https://blog.csdn.net/m0_64204369/article/details/123035598
## https://blog.csdn.net/HHTNAN/article/details/79790370
## matrix: cell*feature  shape: [feature, cell]  # confused!!!
rna_atac_csr_mat = hstack((csr_matrix((rna['X']['data'], rna['X']['indices'],  rna['X']['indptr']), shape=[rna['obs']['index'].shape[0], rna['var']['_index'].shape[0]]),
                           csr_matrix((atac['X']['data'], atac['X']['indices'],  atac['X']['indptr']), shape=[atac['obs']['index'].shape[0], atac['var']['_index'].shape[0]])))

g.create_dataset('indices', data=rna_atac_csr_mat.indices)
g.create_dataset('indptr',  data=rna_atac_csr_mat.indptr)

l = list(rna_atac_csr_mat.shape)
l.reverse()
g.create_dataset('shape', data=l)

out.close()

#test = sc.read_10x_h5('GSE200046_bm_rna_atac.h5', gex_only=False)
##################################################


# mkdir data  # copy gtf files and snareseq fold 

## sc_data_loaders.py
## line 554: assert train_idx, "Got empty training split"    -> assert train_idx.any(), "Got empty training split"
## line 555: assert valid_idx, "Got empty validation split"  -> assert valid_idx.any(), "Got empty validation split"
## line 556: assert test_idx, "Got empty test split"         -> assert test_idx.any(), "Got empty test split"

## train.py & predict-rna.py & predict-atac.py
## add "import mpl_scatter_density" to debug "ValueError: Unknown projection 'scatter_density'"
## add "os.environ["CUDA_VISIBLE_DEVICES"] = "5""

python h5ad_to_h5.py
python ~/scMOG/scMOG_code/bin/Preprocessing.py --data GSE20046_bm_rna_atac.h5 --outdir GSE20046_bm_preprocessed_datasets
python ~/scMOG/scMOG_code/bin/train.py  --outdir training_out
python ~/scMOG/scMOG_code/bin/predict-rna.py --outdir predict_out


nohup time python ~/scMOG/scMOG_code/bin/train.py --outdir training_out > training_20230904.log &


wanglab_jlz_57888282















